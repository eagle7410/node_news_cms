{"version":3,"sources":["webpack:///static/js/0.5e266e84ad93864c9c3f.js","webpack:///./~/bootstrap-material-design/scripts/index.js","webpack:///./~/bootstrap-material-design/scripts/material.js","webpack:///./~/bootstrap-material-design/scripts/ripples.js"],"names":["webpackJsonp","435","module","exports","__webpack_require__","439","$","_isChar","evt","which","ctrlKey","metaKey","altKey","_addFormGroupFocus","element","$element","prop","closest","addClass","_toggleDisabledState","state","$target","hasClass","length","toggleClass","_toggleTypeFocus","$input","disabledToggleType","is","material","options","checkboxElements","radioElements","hover","$i","this","find","isDisabled","_removeFormGroupFocus","removeClass","expr","notmdproc","obj","data","validate","input","ripples","checkbox","togglebutton","radio","arrive","autofill","withRipples","join","inputElements","togglebuttonElements","selector","filter","after","each","$formGroup","attr","wrap","removeAttr","legacySizes","input-lg","input-sm","legacySize","standardSize","placeholder","id","forAttribute","val","attachInputEventHandlers","document","on","e","isValid","checkValidity","value","files","i","file","name","substring","loading","setInterval","$this","trigger","setTimeout","clearInterval","attachAutofillEventHandlers","focused","$inputs","parents","not","init","extend","$document","fn","jQuery","440","window","undefined","Ripples","self","defaults","_defaults","_name","prototype","event","isTouch","type","append","$wrapper","children","relY","getRelY","relX","getRelX","rippleColor","getRipplesColor","$ripple","css","left","top","background-color","getComputedStyle","opacity","rippleOn","rippleEnd","rippleOut","getNewSize","Math","max","outerWidth","outerHeight","wrapperOffset","offset","originalEvent","touches","pageX","pageY","color","hasTransitionSupport","thisBody","body","documentElement","thisStyle","style","transition","WebkitTransition","MozTransition","MsTransition","OTransition","test","navigator","userAgent","off","animate","remove","size","-ms-transform","-moz-transform","-webkit-transform","transform","width","height","margin-left","margin-top"],"mappings":"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","file":"static/js/0.5e266e84ad93864c9c3f.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 435:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(439);\n__webpack_require__(440);\n\n/***/ }),\n\n/***/ 439:\n/***/ (function(module, exports) {\n\n/* globals jQuery */\n\n(function ($) {\n  // Selector to select only not already processed elements\n  $.expr[\":\"].notmdproc = function (obj) {\n    if ($(obj).data(\"mdproc\")) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  function _isChar(evt) {\n    if (typeof evt.which == \"undefined\") {\n      return true;\n    } else if (typeof evt.which == \"number\" && evt.which > 0) {\n      return (\n        !evt.ctrlKey\n        && !evt.metaKey\n        && !evt.altKey\n        && evt.which != 8  // backspace\n        && evt.which != 9  // tab\n        && evt.which != 13 // enter\n        && evt.which != 16 // shift\n        && evt.which != 17 // ctrl\n        && evt.which != 20 // caps lock\n        && evt.which != 27 // escape\n      );\n    }\n    return false;\n  }\n\n  function _addFormGroupFocus(element) {\n    var $element = $(element);\n    if (!$element.prop('disabled')) {  // this is showing as undefined on chrome but works fine on firefox??\n      $element.closest(\".form-group\").addClass(\"is-focused\");\n    }\n  }\n\n  function _toggleDisabledState($element, state) {\n    var $target;\n    if ($element.hasClass('checkbox-inline') || $element.hasClass('radio-inline')) {\n      $target = $element;\n    } else {\n      $target = $element.closest('.checkbox').length ? $element.closest('.checkbox') : $element.closest('.radio');\n    }\n    return $target.toggleClass('disabled', state);\n  }\n\n  function _toggleTypeFocus($input) {\n    var disabledToggleType = false;\n    if ($input.is($.material.options.checkboxElements) || $input.is($.material.options.radioElements)) {\n      disabledToggleType = true;\n    }\n    $input.closest('label').hover(function () {\n        var $i = $(this).find('input');\n        var isDisabled = $i.prop('disabled'); // hack because the _addFormGroupFocus() wasn't identifying the property on chrome\n        if (disabledToggleType) {\n          _toggleDisabledState($(this), isDisabled);\n        }\n        if (!isDisabled) {\n          _addFormGroupFocus($i);     // need to find the input so we can check disablement\n        }\n      },\n      function () {\n        _removeFormGroupFocus($(this).find('input'));\n      });\n  }\n\n  function _removeFormGroupFocus(element) {\n    $(element).closest(\".form-group\").removeClass(\"is-focused\"); // remove class from form-group\n  }\n\n  $.material = {\n    \"options\": {\n      // These options set what will be started by $.material.init()\n      \"validate\": true,\n      \"input\": true,\n      \"ripples\": true,\n      \"checkbox\": true,\n      \"togglebutton\": true,\n      \"radio\": true,\n      \"arrive\": true,\n      \"autofill\": false,\n\n      \"withRipples\": [\n        \".btn:not(.btn-link)\",\n        \".card-image\",\n        \".navbar a:not(.withoutripple)\",\n        \".dropdown-menu a\",\n        \".nav-tabs a:not(.withoutripple)\",\n        \".withripple\",\n        \".pagination li:not(.active):not(.disabled) a:not(.withoutripple)\"\n      ].join(\",\"),\n      \"inputElements\": \"input.form-control, textarea.form-control, select.form-control\",\n      \"checkboxElements\": \".checkbox > label > input[type=checkbox], label.checkbox-inline > input[type=checkbox]\",\n      \"togglebuttonElements\": \".togglebutton > label > input[type=checkbox]\",\n      \"radioElements\": \".radio > label > input[type=radio], label.radio-inline > input[type=radio]\"\n    },\n    \"checkbox\": function (selector) {\n      // Add fake-checkbox to material checkboxes\n      var $input = $((selector) ? selector : this.options.checkboxElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='checkbox-material'><span class='check'></span></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"togglebutton\": function (selector) {\n      // Add fake-checkbox to material checkboxes\n      var $input = $((selector) ? selector : this.options.togglebuttonElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='toggle'></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"radio\": function (selector) {\n      // Add fake-radio to material radios\n      var $input = $((selector) ? selector : this.options.radioElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='circle'></span><span class='check'></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"input\": function (selector) {\n      $((selector) ? selector : this.options.inputElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .each(function () {\n          var $input = $(this);\n\n          // Requires form-group standard markup (will add it if necessary)\n          var $formGroup = $input.closest(\".form-group\"); // note that form-group may be grandparent in the case of an input-group\n          if ($formGroup.length === 0 && $input.attr('type') !== \"hidden\" && !$input.attr('hidden')) {\n            $input.wrap(\"<div class='form-group'></div>\");\n            $formGroup = $input.closest(\".form-group\"); // find node after attached (otherwise additional attachments don't work)\n          }\n\n          // Legacy - Add hint label if using the old shorthand data-hint attribute on the input\n          if ($input.attr(\"data-hint\")) {\n            $input.after(\"<p class='help-block'>\" + $input.attr(\"data-hint\") + \"</p>\");\n            $input.removeAttr(\"data-hint\");\n          }\n\n          // Legacy - Change input-sm/lg to form-group-sm/lg instead (preferred standard and simpler css/less variants)\n          var legacySizes = {\n            \"input-lg\": \"form-group-lg\",\n            \"input-sm\": \"form-group-sm\"\n          };\n          $.each(legacySizes, function (legacySize, standardSize) {\n            if ($input.hasClass(legacySize)) {\n              $input.removeClass(legacySize);\n              $formGroup.addClass(standardSize);\n            }\n          });\n\n          // Legacy - Add label-floating if using old shorthand <input class=\"floating-label\" placeholder=\"foo\">\n          if ($input.hasClass(\"floating-label\")) {\n            var placeholder = $input.attr(\"placeholder\");\n            $input.attr(\"placeholder\", null).removeClass(\"floating-label\");\n            var id = $input.attr(\"id\");\n            var forAttribute = \"\";\n            if (id) {\n              forAttribute = \"for='\" + id + \"'\";\n            }\n            $formGroup.addClass(\"label-floating\");\n            $input.after(\"<label \" + forAttribute + \"class='control-label'>\" + placeholder + \"</label>\");\n          }\n\n          // Set as empty if is empty (damn I must improve this...)\n          if ($input.val() === null || $input.val() == \"undefined\" || $input.val() === \"\") {\n            $formGroup.addClass(\"is-empty\");\n          }\n\n          // Support for file input\n          if ($formGroup.find(\"input[type=file]\").length > 0) {\n            $formGroup.addClass(\"is-fileinput\");\n          }\n        });\n    },\n    \"attachInputEventHandlers\": function () {\n      var validate = this.options.validate;\n\n      $(document)\n        .on(\"keydown paste\", \".form-control\", function (e) {\n          if (_isChar(e)) {\n            $(this).closest(\".form-group\").removeClass(\"is-empty\");\n          }\n        })\n        .on(\"keyup change\", \".form-control\", function () {\n          var $input = $(this);\n          var $formGroup = $input.closest(\".form-group\");\n          var isValid = (typeof $input[0].checkValidity === \"undefined\" || $input[0].checkValidity());\n\n          if ($input.val() === \"\") {\n            $formGroup.addClass(\"is-empty\");\n          }\n          else {\n            $formGroup.removeClass(\"is-empty\");\n          }\n\n          // Validation events do not bubble, so they must be attached directly to the input: http://jsfiddle.net/PEpRM/1/\n          //  Further, even the bind method is being caught, but since we are already calling #checkValidity here, just alter\n          //  the form-group on change.\n          //\n          // NOTE: I'm not sure we should be intervening regarding validation, this seems better as a README and snippet of code.\n          //        BUT, I've left it here for backwards compatibility.\n          if (validate) {\n            if (isValid) {\n              $formGroup.removeClass(\"has-error\");\n            }\n            else {\n              $formGroup.addClass(\"has-error\");\n            }\n          }\n        })\n        .on(\"focus\", \".form-control, .form-group.is-fileinput\", function () {\n          _addFormGroupFocus(this);\n        })\n        .on(\"blur\", \".form-control, .form-group.is-fileinput\", function () {\n          _removeFormGroupFocus(this);\n        })\n        // make sure empty is added back when there is a programmatic value change.\n        //  NOTE: programmatic changing of value using $.val() must trigger the change event i.e. $.val('x').trigger('change')\n        .on(\"change\", \".form-group input\", function () {\n          var $input = $(this);\n          if ($input.attr(\"type\") == \"file\") {\n            return;\n          }\n\n          var $formGroup = $input.closest(\".form-group\");\n          var value = $input.val();\n          if (value) {\n            $formGroup.removeClass(\"is-empty\");\n          } else {\n            $formGroup.addClass(\"is-empty\");\n          }\n        })\n        // set the fileinput readonly field with the name of the file\n        .on(\"change\", \".form-group.is-fileinput input[type='file']\", function () {\n          var $input = $(this);\n          var $formGroup = $input.closest(\".form-group\");\n          var value = \"\";\n          $.each(this.files, function (i, file) {\n            value += file.name + \", \";\n          });\n          value = value.substring(0, value.length - 2);\n          if (value) {\n            $formGroup.removeClass(\"is-empty\");\n          } else {\n            $formGroup.addClass(\"is-empty\");\n          }\n          $formGroup.find(\"input.form-control[readonly]\").val(value);\n        });\n    },\n    \"ripples\": function (selector) {\n      $((selector) ? selector : this.options.withRipples).ripples();\n    },\n    \"autofill\": function () {\n      // This part of code will detect autofill when the page is loading (username and password inputs for example)\n      var loading = setInterval(function () {\n        $(\"input[type!=checkbox]\").each(function () {\n          var $this = $(this);\n          if ($this.val() && $this.val() !== $this.attr(\"value\")) {\n            $this.trigger(\"change\");\n          }\n        });\n      }, 100);\n\n      // After 10 seconds we are quite sure all the needed inputs are autofilled then we can stop checking them\n      setTimeout(function () {\n        clearInterval(loading);\n      }, 10000);\n    },\n    \"attachAutofillEventHandlers\": function () {\n      // Listen on inputs of the focused form (because user can select from the autofill dropdown only when the input has focus)\n      var focused;\n      $(document)\n        .on(\"focus\", \"input\", function () {\n          var $inputs = $(this).parents(\"form\").find(\"input\").not(\"[type=file]\");\n          focused = setInterval(function () {\n            $inputs.each(function () {\n              var $this = $(this);\n              if ($this.val() !== $this.attr(\"value\")) {\n                $this.trigger(\"change\");\n              }\n            });\n          }, 100);\n        })\n        .on(\"blur\", \".form-group input\", function () {\n          clearInterval(focused);\n        });\n    },\n    \"init\": function (options) {\n      this.options = $.extend({}, this.options, options);\n      var $document = $(document);\n\n      if ($.fn.ripples && this.options.ripples) {\n        this.ripples();\n      }\n      if (this.options.input) {\n        this.input();\n        this.attachInputEventHandlers();\n      }\n      if (this.options.checkbox) {\n        this.checkbox();\n      }\n      if (this.options.togglebutton) {\n        this.togglebutton();\n      }\n      if (this.options.radio) {\n        this.radio();\n      }\n      if (this.options.autofill) {\n        this.autofill();\n        this.attachAutofillEventHandlers();\n      }\n\n      if (document.arrive && this.options.arrive) {\n        if ($.fn.ripples && this.options.ripples) {\n          $document.arrive(this.options.withRipples, function () {\n            $.material.ripples($(this));\n          });\n        }\n        if (this.options.input) {\n          $document.arrive(this.options.inputElements, function () {\n            $.material.input($(this));\n          });\n        }\n        if (this.options.checkbox) {\n          $document.arrive(this.options.checkboxElements, function () {\n            $.material.checkbox($(this));\n          });\n        }\n        if (this.options.radio) {\n          $document.arrive(this.options.radioElements, function () {\n            $.material.radio($(this));\n          });\n        }\n        if (this.options.togglebutton) {\n          $document.arrive(this.options.togglebuttonElements, function () {\n            $.material.togglebutton($(this));\n          });\n        }\n\n      }\n    }\n  };\n\n})(jQuery);\n\n\n/***/ }),\n\n/***/ 440:\n/***/ (function(module, exports) {\n\n/* Copyright 2014+, Federico Zivolo, LICENSE at https://github.com/FezVrasta/bootstrap-material-design/blob/master/LICENSE.md */\n/* globals jQuery, navigator */\n\n(function($, window, document, undefined) {\n\n  \"use strict\";\n\n  /**\n   * Define the name of the plugin\n   */\n  var ripples = \"ripples\";\n\n\n  /**\n   * Get an instance of the plugin\n   */\n  var self = null;\n\n\n  /**\n   * Define the defaults of the plugin\n   */\n  var defaults = {};\n\n\n  /**\n   * Create the main plugin function\n   */\n  function Ripples(element, options) {\n    self = this;\n\n    this.element = $(element);\n\n    this.options = $.extend({}, defaults, options);\n\n    this._defaults = defaults;\n    this._name = ripples;\n\n    this.init();\n  }\n\n\n  /**\n   * Initialize the plugin\n   */\n  Ripples.prototype.init = function() {\n    var $element  = this.element;\n\n    $element.on(\"mousedown touchstart\", function(event) {\n      /**\n       * Verify if the user is just touching on a device and return if so\n       */\n      if(self.isTouch() && event.type === \"mousedown\") {\n        return;\n      }\n\n\n      /**\n       * Verify if the current element already has a ripple wrapper element and\n       * creates if it doesn't\n       */\n      if(!($element.find(\".ripple-container\").length)) {\n        $element.append(\"<div class=\\\"ripple-container\\\"></div>\");\n      }\n\n\n      /**\n       * Find the ripple wrapper\n       */\n      var $wrapper = $element.children(\".ripple-container\");\n\n\n      /**\n       * Get relY and relX positions\n       */\n      var relY = self.getRelY($wrapper, event);\n      var relX = self.getRelX($wrapper, event);\n\n\n      /**\n       * If relY and/or relX are false, return the event\n       */\n      if(!relY && !relX) {\n        return;\n      }\n\n\n      /**\n       * Get the ripple color\n       */\n      var rippleColor = self.getRipplesColor($element);\n\n\n      /**\n       * Create the ripple element\n       */\n      var $ripple = $(\"<div></div>\");\n\n      $ripple\n      .addClass(\"ripple\")\n      .css({\n        \"left\": relX,\n        \"top\": relY,\n        \"background-color\": rippleColor\n      });\n\n\n      /**\n       * Append the ripple to the wrapper\n       */\n      $wrapper.append($ripple);\n\n\n      /**\n       * Make sure the ripple has the styles applied (ugly hack but it works)\n       */\n      (function() { return window.getComputedStyle($ripple[0]).opacity; })();\n\n\n      /**\n       * Turn on the ripple animation\n       */\n      self.rippleOn($element, $ripple);\n\n\n      /**\n       * Call the rippleEnd function when the transition \"on\" ends\n       */\n      setTimeout(function() {\n        self.rippleEnd($ripple);\n      }, 500);\n\n\n      /**\n       * Detect when the user leaves the element\n       */\n      $element.on(\"mouseup mouseleave touchend\", function() {\n        $ripple.data(\"mousedown\", \"off\");\n\n        if($ripple.data(\"animating\") === \"off\") {\n          self.rippleOut($ripple);\n        }\n      });\n\n    });\n  };\n\n\n  /**\n   * Get the new size based on the element height/width and the ripple width\n   */\n  Ripples.prototype.getNewSize = function($element, $ripple) {\n\n    return (Math.max($element.outerWidth(), $element.outerHeight()) / $ripple.outerWidth()) * 2.5;\n  };\n\n\n  /**\n   * Get the relX\n   */\n  Ripples.prototype.getRelX = function($wrapper,  event) {\n    var wrapperOffset = $wrapper.offset();\n\n    if(!self.isTouch()) {\n      /**\n       * Get the mouse position relative to the ripple wrapper\n       */\n      return event.pageX - wrapperOffset.left;\n    } else {\n      /**\n       * Make sure the user is using only one finger and then get the touch\n       * position relative to the ripple wrapper\n       */\n      event = event.originalEvent;\n\n      if(event.touches.length === 1) {\n        return event.touches[0].pageX - wrapperOffset.left;\n      }\n\n      return false;\n    }\n  };\n\n\n  /**\n   * Get the relY\n   */\n  Ripples.prototype.getRelY = function($wrapper, event) {\n    var wrapperOffset = $wrapper.offset();\n\n    if(!self.isTouch()) {\n      /**\n       * Get the mouse position relative to the ripple wrapper\n       */\n      return event.pageY - wrapperOffset.top;\n    } else {\n      /**\n       * Make sure the user is using only one finger and then get the touch\n       * position relative to the ripple wrapper\n       */\n      event = event.originalEvent;\n\n      if(event.touches.length === 1) {\n        return event.touches[0].pageY - wrapperOffset.top;\n      }\n\n      return false;\n    }\n  };\n\n\n  /**\n   * Get the ripple color\n   */\n  Ripples.prototype.getRipplesColor = function($element) {\n\n    var color = $element.data(\"ripple-color\") ? $element.data(\"ripple-color\") : window.getComputedStyle($element[0]).color;\n\n    return color;\n  };\n\n\n  /**\n   * Verify if the client browser has transistion support\n   */\n  Ripples.prototype.hasTransitionSupport = function() {\n    var thisBody  = document.body || document.documentElement;\n    var thisStyle = thisBody.style;\n\n    var support = (\n      thisStyle.transition !== undefined ||\n      thisStyle.WebkitTransition !== undefined ||\n      thisStyle.MozTransition !== undefined ||\n      thisStyle.MsTransition !== undefined ||\n      thisStyle.OTransition !== undefined\n    );\n\n    return support;\n  };\n\n\n  /**\n   * Verify if the client is using a mobile device\n   */\n  Ripples.prototype.isTouch = function() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  };\n\n\n  /**\n   * End the animation of the ripple\n   */\n  Ripples.prototype.rippleEnd = function($ripple) {\n    $ripple.data(\"animating\", \"off\");\n\n    if($ripple.data(\"mousedown\") === \"off\") {\n      self.rippleOut($ripple);\n    }\n  };\n\n\n  /**\n   * Turn off the ripple effect\n   */\n  Ripples.prototype.rippleOut = function($ripple) {\n    $ripple.off();\n\n    if(self.hasTransitionSupport()) {\n      $ripple.addClass(\"ripple-out\");\n    } else {\n      $ripple.animate({\"opacity\": 0}, 100, function() {\n        $ripple.trigger(\"transitionend\");\n      });\n    }\n\n    $ripple.on(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\", function() {\n      $ripple.remove();\n    });\n  };\n\n\n  /**\n   * Turn on the ripple effect\n   */\n  Ripples.prototype.rippleOn = function($element, $ripple) {\n    var size = self.getNewSize($element, $ripple);\n\n    if(self.hasTransitionSupport()) {\n      $ripple\n      .css({\n        \"-ms-transform\": \"scale(\" + size + \")\",\n        \"-moz-transform\": \"scale(\" + size + \")\",\n        \"-webkit-transform\": \"scale(\" + size + \")\",\n        \"transform\": \"scale(\" + size + \")\"\n      })\n      .addClass(\"ripple-on\")\n      .data(\"animating\", \"on\")\n      .data(\"mousedown\", \"on\");\n    } else {\n      $ripple.animate({\n        \"width\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n        \"height\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n        \"margin-left\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n        \"margin-top\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n        \"opacity\": 0.2\n      }, 500, function() {\n        $ripple.trigger(\"transitionend\");\n      });\n    }\n  };\n\n\n  /**\n   * Create the jquery plugin function\n   */\n  $.fn.ripples = function(options) {\n    return this.each(function() {\n      if(!$.data(this, \"plugin_\" + ripples)) {\n        $.data(this, \"plugin_\" + ripples, new Ripples(this, options));\n      }\n    });\n  };\n\n})(jQuery, window, document);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.5e266e84ad93864c9c3f.js","require(\"./material.js\");\nrequire(\"./ripples.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bootstrap-material-design/scripts/index.js\n// module id = 435\n// module chunks = 0","/* globals jQuery */\n\n(function ($) {\n  // Selector to select only not already processed elements\n  $.expr[\":\"].notmdproc = function (obj) {\n    if ($(obj).data(\"mdproc\")) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  function _isChar(evt) {\n    if (typeof evt.which == \"undefined\") {\n      return true;\n    } else if (typeof evt.which == \"number\" && evt.which > 0) {\n      return (\n        !evt.ctrlKey\n        && !evt.metaKey\n        && !evt.altKey\n        && evt.which != 8  // backspace\n        && evt.which != 9  // tab\n        && evt.which != 13 // enter\n        && evt.which != 16 // shift\n        && evt.which != 17 // ctrl\n        && evt.which != 20 // caps lock\n        && evt.which != 27 // escape\n      );\n    }\n    return false;\n  }\n\n  function _addFormGroupFocus(element) {\n    var $element = $(element);\n    if (!$element.prop('disabled')) {  // this is showing as undefined on chrome but works fine on firefox??\n      $element.closest(\".form-group\").addClass(\"is-focused\");\n    }\n  }\n\n  function _toggleDisabledState($element, state) {\n    var $target;\n    if ($element.hasClass('checkbox-inline') || $element.hasClass('radio-inline')) {\n      $target = $element;\n    } else {\n      $target = $element.closest('.checkbox').length ? $element.closest('.checkbox') : $element.closest('.radio');\n    }\n    return $target.toggleClass('disabled', state);\n  }\n\n  function _toggleTypeFocus($input) {\n    var disabledToggleType = false;\n    if ($input.is($.material.options.checkboxElements) || $input.is($.material.options.radioElements)) {\n      disabledToggleType = true;\n    }\n    $input.closest('label').hover(function () {\n        var $i = $(this).find('input');\n        var isDisabled = $i.prop('disabled'); // hack because the _addFormGroupFocus() wasn't identifying the property on chrome\n        if (disabledToggleType) {\n          _toggleDisabledState($(this), isDisabled);\n        }\n        if (!isDisabled) {\n          _addFormGroupFocus($i);     // need to find the input so we can check disablement\n        }\n      },\n      function () {\n        _removeFormGroupFocus($(this).find('input'));\n      });\n  }\n\n  function _removeFormGroupFocus(element) {\n    $(element).closest(\".form-group\").removeClass(\"is-focused\"); // remove class from form-group\n  }\n\n  $.material = {\n    \"options\": {\n      // These options set what will be started by $.material.init()\n      \"validate\": true,\n      \"input\": true,\n      \"ripples\": true,\n      \"checkbox\": true,\n      \"togglebutton\": true,\n      \"radio\": true,\n      \"arrive\": true,\n      \"autofill\": false,\n\n      \"withRipples\": [\n        \".btn:not(.btn-link)\",\n        \".card-image\",\n        \".navbar a:not(.withoutripple)\",\n        \".dropdown-menu a\",\n        \".nav-tabs a:not(.withoutripple)\",\n        \".withripple\",\n        \".pagination li:not(.active):not(.disabled) a:not(.withoutripple)\"\n      ].join(\",\"),\n      \"inputElements\": \"input.form-control, textarea.form-control, select.form-control\",\n      \"checkboxElements\": \".checkbox > label > input[type=checkbox], label.checkbox-inline > input[type=checkbox]\",\n      \"togglebuttonElements\": \".togglebutton > label > input[type=checkbox]\",\n      \"radioElements\": \".radio > label > input[type=radio], label.radio-inline > input[type=radio]\"\n    },\n    \"checkbox\": function (selector) {\n      // Add fake-checkbox to material checkboxes\n      var $input = $((selector) ? selector : this.options.checkboxElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='checkbox-material'><span class='check'></span></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"togglebutton\": function (selector) {\n      // Add fake-checkbox to material checkboxes\n      var $input = $((selector) ? selector : this.options.togglebuttonElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='toggle'></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"radio\": function (selector) {\n      // Add fake-radio to material radios\n      var $input = $((selector) ? selector : this.options.radioElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='circle'></span><span class='check'></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"input\": function (selector) {\n      $((selector) ? selector : this.options.inputElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .each(function () {\n          var $input = $(this);\n\n          // Requires form-group standard markup (will add it if necessary)\n          var $formGroup = $input.closest(\".form-group\"); // note that form-group may be grandparent in the case of an input-group\n          if ($formGroup.length === 0 && $input.attr('type') !== \"hidden\" && !$input.attr('hidden')) {\n            $input.wrap(\"<div class='form-group'></div>\");\n            $formGroup = $input.closest(\".form-group\"); // find node after attached (otherwise additional attachments don't work)\n          }\n\n          // Legacy - Add hint label if using the old shorthand data-hint attribute on the input\n          if ($input.attr(\"data-hint\")) {\n            $input.after(\"<p class='help-block'>\" + $input.attr(\"data-hint\") + \"</p>\");\n            $input.removeAttr(\"data-hint\");\n          }\n\n          // Legacy - Change input-sm/lg to form-group-sm/lg instead (preferred standard and simpler css/less variants)\n          var legacySizes = {\n            \"input-lg\": \"form-group-lg\",\n            \"input-sm\": \"form-group-sm\"\n          };\n          $.each(legacySizes, function (legacySize, standardSize) {\n            if ($input.hasClass(legacySize)) {\n              $input.removeClass(legacySize);\n              $formGroup.addClass(standardSize);\n            }\n          });\n\n          // Legacy - Add label-floating if using old shorthand <input class=\"floating-label\" placeholder=\"foo\">\n          if ($input.hasClass(\"floating-label\")) {\n            var placeholder = $input.attr(\"placeholder\");\n            $input.attr(\"placeholder\", null).removeClass(\"floating-label\");\n            var id = $input.attr(\"id\");\n            var forAttribute = \"\";\n            if (id) {\n              forAttribute = \"for='\" + id + \"'\";\n            }\n            $formGroup.addClass(\"label-floating\");\n            $input.after(\"<label \" + forAttribute + \"class='control-label'>\" + placeholder + \"</label>\");\n          }\n\n          // Set as empty if is empty (damn I must improve this...)\n          if ($input.val() === null || $input.val() == \"undefined\" || $input.val() === \"\") {\n            $formGroup.addClass(\"is-empty\");\n          }\n\n          // Support for file input\n          if ($formGroup.find(\"input[type=file]\").length > 0) {\n            $formGroup.addClass(\"is-fileinput\");\n          }\n        });\n    },\n    \"attachInputEventHandlers\": function () {\n      var validate = this.options.validate;\n\n      $(document)\n        .on(\"keydown paste\", \".form-control\", function (e) {\n          if (_isChar(e)) {\n            $(this).closest(\".form-group\").removeClass(\"is-empty\");\n          }\n        })\n        .on(\"keyup change\", \".form-control\", function () {\n          var $input = $(this);\n          var $formGroup = $input.closest(\".form-group\");\n          var isValid = (typeof $input[0].checkValidity === \"undefined\" || $input[0].checkValidity());\n\n          if ($input.val() === \"\") {\n            $formGroup.addClass(\"is-empty\");\n          }\n          else {\n            $formGroup.removeClass(\"is-empty\");\n          }\n\n          // Validation events do not bubble, so they must be attached directly to the input: http://jsfiddle.net/PEpRM/1/\n          //  Further, even the bind method is being caught, but since we are already calling #checkValidity here, just alter\n          //  the form-group on change.\n          //\n          // NOTE: I'm not sure we should be intervening regarding validation, this seems better as a README and snippet of code.\n          //        BUT, I've left it here for backwards compatibility.\n          if (validate) {\n            if (isValid) {\n              $formGroup.removeClass(\"has-error\");\n            }\n            else {\n              $formGroup.addClass(\"has-error\");\n            }\n          }\n        })\n        .on(\"focus\", \".form-control, .form-group.is-fileinput\", function () {\n          _addFormGroupFocus(this);\n        })\n        .on(\"blur\", \".form-control, .form-group.is-fileinput\", function () {\n          _removeFormGroupFocus(this);\n        })\n        // make sure empty is added back when there is a programmatic value change.\n        //  NOTE: programmatic changing of value using $.val() must trigger the change event i.e. $.val('x').trigger('change')\n        .on(\"change\", \".form-group input\", function () {\n          var $input = $(this);\n          if ($input.attr(\"type\") == \"file\") {\n            return;\n          }\n\n          var $formGroup = $input.closest(\".form-group\");\n          var value = $input.val();\n          if (value) {\n            $formGroup.removeClass(\"is-empty\");\n          } else {\n            $formGroup.addClass(\"is-empty\");\n          }\n        })\n        // set the fileinput readonly field with the name of the file\n        .on(\"change\", \".form-group.is-fileinput input[type='file']\", function () {\n          var $input = $(this);\n          var $formGroup = $input.closest(\".form-group\");\n          var value = \"\";\n          $.each(this.files, function (i, file) {\n            value += file.name + \", \";\n          });\n          value = value.substring(0, value.length - 2);\n          if (value) {\n            $formGroup.removeClass(\"is-empty\");\n          } else {\n            $formGroup.addClass(\"is-empty\");\n          }\n          $formGroup.find(\"input.form-control[readonly]\").val(value);\n        });\n    },\n    \"ripples\": function (selector) {\n      $((selector) ? selector : this.options.withRipples).ripples();\n    },\n    \"autofill\": function () {\n      // This part of code will detect autofill when the page is loading (username and password inputs for example)\n      var loading = setInterval(function () {\n        $(\"input[type!=checkbox]\").each(function () {\n          var $this = $(this);\n          if ($this.val() && $this.val() !== $this.attr(\"value\")) {\n            $this.trigger(\"change\");\n          }\n        });\n      }, 100);\n\n      // After 10 seconds we are quite sure all the needed inputs are autofilled then we can stop checking them\n      setTimeout(function () {\n        clearInterval(loading);\n      }, 10000);\n    },\n    \"attachAutofillEventHandlers\": function () {\n      // Listen on inputs of the focused form (because user can select from the autofill dropdown only when the input has focus)\n      var focused;\n      $(document)\n        .on(\"focus\", \"input\", function () {\n          var $inputs = $(this).parents(\"form\").find(\"input\").not(\"[type=file]\");\n          focused = setInterval(function () {\n            $inputs.each(function () {\n              var $this = $(this);\n              if ($this.val() !== $this.attr(\"value\")) {\n                $this.trigger(\"change\");\n              }\n            });\n          }, 100);\n        })\n        .on(\"blur\", \".form-group input\", function () {\n          clearInterval(focused);\n        });\n    },\n    \"init\": function (options) {\n      this.options = $.extend({}, this.options, options);\n      var $document = $(document);\n\n      if ($.fn.ripples && this.options.ripples) {\n        this.ripples();\n      }\n      if (this.options.input) {\n        this.input();\n        this.attachInputEventHandlers();\n      }\n      if (this.options.checkbox) {\n        this.checkbox();\n      }\n      if (this.options.togglebutton) {\n        this.togglebutton();\n      }\n      if (this.options.radio) {\n        this.radio();\n      }\n      if (this.options.autofill) {\n        this.autofill();\n        this.attachAutofillEventHandlers();\n      }\n\n      if (document.arrive && this.options.arrive) {\n        if ($.fn.ripples && this.options.ripples) {\n          $document.arrive(this.options.withRipples, function () {\n            $.material.ripples($(this));\n          });\n        }\n        if (this.options.input) {\n          $document.arrive(this.options.inputElements, function () {\n            $.material.input($(this));\n          });\n        }\n        if (this.options.checkbox) {\n          $document.arrive(this.options.checkboxElements, function () {\n            $.material.checkbox($(this));\n          });\n        }\n        if (this.options.radio) {\n          $document.arrive(this.options.radioElements, function () {\n            $.material.radio($(this));\n          });\n        }\n        if (this.options.togglebutton) {\n          $document.arrive(this.options.togglebuttonElements, function () {\n            $.material.togglebutton($(this));\n          });\n        }\n\n      }\n    }\n  };\n\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bootstrap-material-design/scripts/material.js\n// module id = 439\n// module chunks = 0","/* Copyright 2014+, Federico Zivolo, LICENSE at https://github.com/FezVrasta/bootstrap-material-design/blob/master/LICENSE.md */\n/* globals jQuery, navigator */\n\n(function($, window, document, undefined) {\n\n  \"use strict\";\n\n  /**\n   * Define the name of the plugin\n   */\n  var ripples = \"ripples\";\n\n\n  /**\n   * Get an instance of the plugin\n   */\n  var self = null;\n\n\n  /**\n   * Define the defaults of the plugin\n   */\n  var defaults = {};\n\n\n  /**\n   * Create the main plugin function\n   */\n  function Ripples(element, options) {\n    self = this;\n\n    this.element = $(element);\n\n    this.options = $.extend({}, defaults, options);\n\n    this._defaults = defaults;\n    this._name = ripples;\n\n    this.init();\n  }\n\n\n  /**\n   * Initialize the plugin\n   */\n  Ripples.prototype.init = function() {\n    var $element  = this.element;\n\n    $element.on(\"mousedown touchstart\", function(event) {\n      /**\n       * Verify if the user is just touching on a device and return if so\n       */\n      if(self.isTouch() && event.type === \"mousedown\") {\n        return;\n      }\n\n\n      /**\n       * Verify if the current element already has a ripple wrapper element and\n       * creates if it doesn't\n       */\n      if(!($element.find(\".ripple-container\").length)) {\n        $element.append(\"<div class=\\\"ripple-container\\\"></div>\");\n      }\n\n\n      /**\n       * Find the ripple wrapper\n       */\n      var $wrapper = $element.children(\".ripple-container\");\n\n\n      /**\n       * Get relY and relX positions\n       */\n      var relY = self.getRelY($wrapper, event);\n      var relX = self.getRelX($wrapper, event);\n\n\n      /**\n       * If relY and/or relX are false, return the event\n       */\n      if(!relY && !relX) {\n        return;\n      }\n\n\n      /**\n       * Get the ripple color\n       */\n      var rippleColor = self.getRipplesColor($element);\n\n\n      /**\n       * Create the ripple element\n       */\n      var $ripple = $(\"<div></div>\");\n\n      $ripple\n      .addClass(\"ripple\")\n      .css({\n        \"left\": relX,\n        \"top\": relY,\n        \"background-color\": rippleColor\n      });\n\n\n      /**\n       * Append the ripple to the wrapper\n       */\n      $wrapper.append($ripple);\n\n\n      /**\n       * Make sure the ripple has the styles applied (ugly hack but it works)\n       */\n      (function() { return window.getComputedStyle($ripple[0]).opacity; })();\n\n\n      /**\n       * Turn on the ripple animation\n       */\n      self.rippleOn($element, $ripple);\n\n\n      /**\n       * Call the rippleEnd function when the transition \"on\" ends\n       */\n      setTimeout(function() {\n        self.rippleEnd($ripple);\n      }, 500);\n\n\n      /**\n       * Detect when the user leaves the element\n       */\n      $element.on(\"mouseup mouseleave touchend\", function() {\n        $ripple.data(\"mousedown\", \"off\");\n\n        if($ripple.data(\"animating\") === \"off\") {\n          self.rippleOut($ripple);\n        }\n      });\n\n    });\n  };\n\n\n  /**\n   * Get the new size based on the element height/width and the ripple width\n   */\n  Ripples.prototype.getNewSize = function($element, $ripple) {\n\n    return (Math.max($element.outerWidth(), $element.outerHeight()) / $ripple.outerWidth()) * 2.5;\n  };\n\n\n  /**\n   * Get the relX\n   */\n  Ripples.prototype.getRelX = function($wrapper,  event) {\n    var wrapperOffset = $wrapper.offset();\n\n    if(!self.isTouch()) {\n      /**\n       * Get the mouse position relative to the ripple wrapper\n       */\n      return event.pageX - wrapperOffset.left;\n    } else {\n      /**\n       * Make sure the user is using only one finger and then get the touch\n       * position relative to the ripple wrapper\n       */\n      event = event.originalEvent;\n\n      if(event.touches.length === 1) {\n        return event.touches[0].pageX - wrapperOffset.left;\n      }\n\n      return false;\n    }\n  };\n\n\n  /**\n   * Get the relY\n   */\n  Ripples.prototype.getRelY = function($wrapper, event) {\n    var wrapperOffset = $wrapper.offset();\n\n    if(!self.isTouch()) {\n      /**\n       * Get the mouse position relative to the ripple wrapper\n       */\n      return event.pageY - wrapperOffset.top;\n    } else {\n      /**\n       * Make sure the user is using only one finger and then get the touch\n       * position relative to the ripple wrapper\n       */\n      event = event.originalEvent;\n\n      if(event.touches.length === 1) {\n        return event.touches[0].pageY - wrapperOffset.top;\n      }\n\n      return false;\n    }\n  };\n\n\n  /**\n   * Get the ripple color\n   */\n  Ripples.prototype.getRipplesColor = function($element) {\n\n    var color = $element.data(\"ripple-color\") ? $element.data(\"ripple-color\") : window.getComputedStyle($element[0]).color;\n\n    return color;\n  };\n\n\n  /**\n   * Verify if the client browser has transistion support\n   */\n  Ripples.prototype.hasTransitionSupport = function() {\n    var thisBody  = document.body || document.documentElement;\n    var thisStyle = thisBody.style;\n\n    var support = (\n      thisStyle.transition !== undefined ||\n      thisStyle.WebkitTransition !== undefined ||\n      thisStyle.MozTransition !== undefined ||\n      thisStyle.MsTransition !== undefined ||\n      thisStyle.OTransition !== undefined\n    );\n\n    return support;\n  };\n\n\n  /**\n   * Verify if the client is using a mobile device\n   */\n  Ripples.prototype.isTouch = function() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  };\n\n\n  /**\n   * End the animation of the ripple\n   */\n  Ripples.prototype.rippleEnd = function($ripple) {\n    $ripple.data(\"animating\", \"off\");\n\n    if($ripple.data(\"mousedown\") === \"off\") {\n      self.rippleOut($ripple);\n    }\n  };\n\n\n  /**\n   * Turn off the ripple effect\n   */\n  Ripples.prototype.rippleOut = function($ripple) {\n    $ripple.off();\n\n    if(self.hasTransitionSupport()) {\n      $ripple.addClass(\"ripple-out\");\n    } else {\n      $ripple.animate({\"opacity\": 0}, 100, function() {\n        $ripple.trigger(\"transitionend\");\n      });\n    }\n\n    $ripple.on(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\", function() {\n      $ripple.remove();\n    });\n  };\n\n\n  /**\n   * Turn on the ripple effect\n   */\n  Ripples.prototype.rippleOn = function($element, $ripple) {\n    var size = self.getNewSize($element, $ripple);\n\n    if(self.hasTransitionSupport()) {\n      $ripple\n      .css({\n        \"-ms-transform\": \"scale(\" + size + \")\",\n        \"-moz-transform\": \"scale(\" + size + \")\",\n        \"-webkit-transform\": \"scale(\" + size + \")\",\n        \"transform\": \"scale(\" + size + \")\"\n      })\n      .addClass(\"ripple-on\")\n      .data(\"animating\", \"on\")\n      .data(\"mousedown\", \"on\");\n    } else {\n      $ripple.animate({\n        \"width\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n        \"height\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n        \"margin-left\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n        \"margin-top\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n        \"opacity\": 0.2\n      }, 500, function() {\n        $ripple.trigger(\"transitionend\");\n      });\n    }\n  };\n\n\n  /**\n   * Create the jquery plugin function\n   */\n  $.fn.ripples = function(options) {\n    return this.each(function() {\n      if(!$.data(this, \"plugin_\" + ripples)) {\n        $.data(this, \"plugin_\" + ripples, new Ripples(this, options));\n      }\n    });\n  };\n\n})(jQuery, window, document);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bootstrap-material-design/scripts/ripples.js\n// module id = 440\n// module chunks = 0"],"sourceRoot":""}